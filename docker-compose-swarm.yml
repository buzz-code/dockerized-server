version: '3.3'

services:
  netdata:
    image: netdata/netdata:edge
    hostname: "{{.Node.Hostname}}"
    ports:
      - 19999:19999
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /etc/hostname:/etc/hostname:ro
    environment:
      - NETDATA_CLAIM_TOKEN=$NETDATA_CLAIM_TOKEN
      - NETDATA_CLAIM_URL=$NETDATA_CLAIM_URL
      - NETDATA_CLAIM_ROOMS=$NETDATA_CLAIM_ROOMS
    labels:
      co.elastic.logs/enabled: 'false'
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.50'
          memory: 500m
      # placement:
      #   constraints: [node.labels.elk != true]
      labels:
        co.elastic.logs/enabled: 'false'

  caddy:
    image: lucaslorentz/caddy-docker-proxy:2.8.3-alpine
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    environment:
      - CADDY_INGRESS_NETWORKS=caddy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - caddy_data:/data
    deploy:
      placement:
        constraints:
          - "node.role == manager"
    #   labels:
    #     caddy: $DOMAIN_NAME, www.$DOMAIN_NAME
    #     caddy.respond: '"Hello World" 200'
    networks:
      - caddy

  filebeat:
    image: elastic/filebeat:7.17.0
    restart: unless-stopped
    volumes:
      # - '/root/dockerized-server/docker-elk/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro'
      - '/var/lib/docker/containers:/var/lib/docker/containers:ro'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    configs:
      - source: filebeat-config12
        target: /usr/share/filebeat/filebeat.yml
    labels:
      co.elastic.logs/enabled: 'true'
    user: root
    deploy:
      mode: global
      # placement:
      #   constraints: [node.labels.codeserver != true]
      labels:
        co.elastic.logs/enabled: 'true'
    environment:
    - ELASTICSEARCH_USER=$ELASTICSEARCH_USER
    - ELASTICSEARCH_PASSWORD=$ELASTICSEARCH_PASSWORD
    - ELASTICSEARCH_URL=http://elasticsearch:9200
    - KIBANA_URL=http://kibana:5601
    networks:
      - elknet
      - elk_elk

  # elk:
  #   image: sebp/elk:8.9.1
  #   ports:
  #     - "5601:5601"
  #   #   - "9200:9200"
  #   #   - "5044:5044"
  #   volumes:
  #     - elk_data:/var/lib/elasticsearch
  #   # configs:
  #   #   - source: elasticsearch_config
  #   #     target: /etc/elasticsearch/elasticsearch.yml
  #   deploy:
  #     placement:
  #       constraints:
  #           - node.labels.elk == true
  #     labels:
  #       caddy: kibana.$DOMAIN_NAME
  #       caddy.reverse_proxy: "{{upstreams 5601}}"
  #   environment:
  #     - ELASTICSEARCH_USER=$ELASTICSEARCH_USER
  #     - ELASTICSEARCH_PASSWORD=$ELASTICSEARCH_PASSWORD
  #     - LOGSTASH_USER=$LOGSTASH_USER
  #     - LOGSTASH_PASSWORD=$LOGSTASH_PASSWORD
  #     - KIBANA_USER=$KIBANA_USER
  #     - KIBANA_PASSWORD=$KIBANA_PASSWORD
  #     - LOGSTASH_START=0
  #     - XPACK_SECURITY_ENABLED=true
  #     - xpack.security.enabled=true
  #     - server.publicBaseUrl=kibana.$DOMAIN_NAME
  #     # - ES_JAVA_OPTS="-Xmx256m -Xms256m"
  #   networks:
  #     - caddy
  #     - elknet


volumes:
  caddy_data: {}
  # elk_data: {}
  netdataconfig:
  netdatalib:
  netdatacache:


networks:
  caddy:
    external: true
  elknet:
    external: true
  elk_elk:
    external: true

configs:
  caddy-basic-content3:
    file: ./Caddyfile
    labels:
      caddy:
  filebeat-config12:
    file: ./docker-elk/filebeat.docker.yml
